<div id=\"content\" class=\"flex items-start justify-center h-full bg-gray-50\" hx-swap-oob=\"true\" hx-trigger=\"load-&gt;initGame()\"><div class=\"text-xl border border-red-400 text-blue-500 font-bold\"><h1>Games Page</h1><p>Pong</p><div id=\"game-container\" class=\"relative\"><iframe id=\"pong-frame\" src=\"/static/games/pong.html\" width=\"750\" height=\"585\" style=\"pointer-events: none;\"></iframe><div id=\"game-overlay\" class=\"absolute top-0 left-0 w-full h-full flex items-center justify-center bg-black bg-opacity-50 text-white cursor-pointer\">Click to play</div></div></div></div><script>\nfunction initGame() {\n    const frame = document.getElementById('pong-frame');\n    const overlay = document.getElementById('game-overlay');\n    const container = document.getElementById('game-container');\n\n    if (!frame || !overlay || !container) {\n        console.error('Game elements not found. Initialization failed.');\n        return;\n    }\n\n    function sendMessage(msg) {\n        frame.contentWindow.postMessage(msg, '*');\n    }\n\n    overlay.addEventListener('click', function() {\n        sendMessage('start');\n        overlay.style.display = 'none';\n        frame.style.pointerEvents = 'auto';\n        frame.focus(); // Focus the iframe\n    });\n\n    container.addEventListener('mouseleave', function() {\n        sendMessage('stop');\n        overlay.style.display = 'flex';\n        frame.style.pointerEvents = 'none';\n    });\n\n    // Forward keyboard events to the iframe\n    document.addEventListener('keydown', function(e) {\n        if (frame.style.pointerEvents === 'auto') {\n            sendMessage({type: 'keydown', which: e.which});\n            e.preventDefault(); // Prevent scrolling\n        }\n    });\n\n    document.addEventListener('keyup', function(e) {\n        if (frame.style.pointerEvents === 'auto') {\n            sendMessage({type: 'keyup', which: e.which});\n            e.preventDefault(); // Prevent scrolling\n        }\n    });\n\n    console.log('Game initialized successfully');\n}\n\n// Try to initialize immediately\nif (document.readyState === 'complete' || document.readyState === 'interactive') {\n    initGame();\n} else {\n    // If the DOM isn't ready, wait for it\n    document.addEventListener('DOMContentLoaded', initGame);\n}\n\n// For HTMX-loaded content\ndocument.body.addEventListener('htmx:afterSettle', initGame);\n\n// As a fallback, use MutationObserver\nconst observer = new MutationObserver((mutations) => {\n    for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n            const gameContainer = document.getElementById('game-container');\n            if (gameContainer) {\n                initGame();\n                observer.disconnect();\n                break;\n            }\n        }\n    }\n});\nobserver.observe(document.body, { childList: true, subtree: true });\n</script><noscript><p>Enable Javascript to Play Games</p></noscript>
